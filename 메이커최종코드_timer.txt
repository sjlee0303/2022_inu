#include <SoftwareSerial.h>
SoftwareSerial BTSerial(2, 3); //블루투스의 Tx, Rx핀을 2번 3번핀으로 설정

#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);



int hour = 0, minute = 0, second = 0;

int timer = 0;
int stop = 0;

// 4번핀 ~ 7번 핀 터치센서 핀
#define ts1 4  // start (기본 30분)
#define ts2 5  // 10분씩 증가
#define ts3 6  // stop
#define ts4 7  // reset

// 8, 9번 핀 dc모터 핀
// dc모터 - 모터 드라이버 사용 (속도제어 가능)
//#define dc1 8 
//#define dc2 9

//lcd 초기 상태 함수
void initialstate_LCD(){
  lcd.clear();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("drying rack");
  lcd.setCursor(0, 1);
  lcd.print("start");
  delay(1000);
}

//timer 현재 상태 LCD에 출력하는 함수
void timerstate_LCD(){
  // lcd.init();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Timer");
  lcd.setCursor(0, 1);
  if(hour<10) lcd.print(0);
  lcd.print(hour);
  lcd.print(":");
  if(minute<10) lcd.print(0);
  lcd.print(minute);
  lcd.print(":");
  if(second<10) lcd.print(0);
  lcd.print(second);
}

void setup() {
   
  BTSerial.begin(38400); // Try 9600 for HC06
  Serial.begin(9600);
  
  pinMode(ts1, INPUT);  // 터치 센서
  pinMode(ts2, INPUT);
  pinMode(ts3, INPUT);
  pinMode(ts4, INPUT);

  //pinMode(dc1, OUTPUT); // dc 모터 
  //pinMode(dc2, OUTPUT);
  
  //LCD timer 작동 이전 초기 화면
  lcd.init();
  initialstate_LCD();


}

void loop() {




    
  if (digitalRead(ts1) == HIGH) { //start 버튼 + 기본 30분
    if(stop == 1) { //stop 후 start 누를 때 기본 30분 없이 바로 timer 실행
      timer = 1;
      stop = 0;
    }
    else if (timer == 0){ 
      timer = 1;
      minute = 30;
    }
  } 
  else if (digitalRead(ts2) == HIGH) { //10분씩 timer 증가
    minute += 10;
    if(minute>=60){
      hour += minute/60;
      minute = minute%60;
    }
  } 
  else if (digitalRead(ts3) == HIGH) { //stop
    timer = 0;
    stop = 1;
  } 
  else if (digitalRead(ts4) == HIGH) { //reset
    hour = 0;
    minute = 0;
    second = 0;
    timer = 0;
    stop = 0;
  }

  //timer on
  if (timer == 1) {

    //
    
    // timer가 1일 때 드라이기 on*
    BTSerial.println('a');
    
    //LCD에 timer 출력
    timerstate_LCD();

    //timer 
    if (second == 0) {
      if(minute > 0) {
       minute--;
       second = 60;
      }
      else if(minute == 0){
        if(hour>0){
          hour--;
          minute = 59;
          second = 60;
        }
      }
    } 

    //시간 다 되면 timer 0으로
    if(second ==0 && minute == 0 && hour == 0){ 
      
      timer = 0;
    }

    second--;
    delay(1000); //
  }
  else if(timer==0){

    //timer가 0일때 드라이기 off*
    BTSerial.println('b');
    
    if(stop == 1){
      //lcd에 timer 정지 된 상태 출력
      timerstate_LCD();
      delay(1000);

      //
      
    }
    else {
      //시간 다 완료 되었을 때 초기의 LCD 출력
      initialstate_LCD();

      //
    }

  }

}